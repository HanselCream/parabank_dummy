{"name": "Test Registration with Valid Data", "status": "failed", "statusDetails": {"message": "AssertionError: Welcome message verification failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x11d3b03+62899]\n\tGetHandleVerifier [0x0x11d3b44+62964]\n\t(No symbol) [0x0x10010f3]\n\t(No symbol) [0x0x104980e]\n\t(No symbol) [0x0x1049bab]\n\t(No symbol) [0x0x10925c2]\n\t(No symbol) [0x0x106e554]\n\t(No symbol) [0x0x108fd81]\n\t(No symbol) [0x0x106e306]\n\t(No symbol) [0x0x103d670]\n\t(No symbol) [0x0x103e4e4]\n\tGetHandleVerifier [0x0x1434793+2556483]\n\tGetHandleVerifier [0x0x142fd02+2537394]\n\tGetHandleVerifier [0x0x11fa2fa+220586]\n\tGetHandleVerifier [0x0x11eaae8+157080]\n\tGetHandleVerifier [0x0x11f141d+184013]\n\tGetHandleVerifier [0x0x11dba68+95512]\n\tGetHandleVerifier [0x0x11dbc10+95936]\n\tGetHandleVerifier [0x0x11c6b5a+9738]\n\tBaseThreadInitThunk [0x0x75a17ba9+25]\n\tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\n\tRtlClearBits [0x0x77d0c04f+191]", "trace": "self = <pages.paraBank_page.ParaBankPage object at 0x000001DAE0913620>\n\n    @allure.step(\"Verifying welcome message\")\n    def verify_welcome_message_element(self):\n        try:\n>           self.wait_for_element(self.Locators.WELCOME_MESSAGE_ELEMENT, timeout=15)\n\npages\\paraBank_page.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\BaseDriver.py:52: in wait_for_element\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"56c3f43cf1d99bd2079066adcec9bad2\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001DAE0A39EE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x11d3b03+62899]\nE       \tGetHandleVerifier [0x0x11d3b44+62964]\nE       \t(No symbol) [0x0x10010f3]\nE       \t(No symbol) [0x0x104980e]\nE       \t(No symbol) [0x0x1049bab]\nE       \t(No symbol) [0x0x10925c2]\nE       \t(No symbol) [0x0x106e554]\nE       \t(No symbol) [0x0x108fd81]\nE       \t(No symbol) [0x0x106e306]\nE       \t(No symbol) [0x0x103d670]\nE       \t(No symbol) [0x0x103e4e4]\nE       \tGetHandleVerifier [0x0x1434793+2556483]\nE       \tGetHandleVerifier [0x0x142fd02+2537394]\nE       \tGetHandleVerifier [0x0x11fa2fa+220586]\nE       \tGetHandleVerifier [0x0x11eaae8+157080]\nE       \tGetHandleVerifier [0x0x11f141d+184013]\nE       \tGetHandleVerifier [0x0x11dba68+95512]\nE       \tGetHandleVerifier [0x0x11dbc10+95936]\nE       \tGetHandleVerifier [0x0x11c6b5a+9738]\nE       \tBaseThreadInitThunk [0x0x75a17ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\nE       \tRtlClearBits [0x0x77d0c04f+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <paraBank_test.TestParaBank object at 0x000001DAE0852C10>\n\n    @allure.title(\"Test Registration with Valid Data\")\n    @allure.description(\"This test case registers a new user with valid data and verifies the welcome message.\")\n    def test_register_user(self):\n        self.pb.click_register()\n    \n        username = generate_random_name(prefix=\"user\")\n        password = generate_random_name(prefix=\"pass\")\n        print(f\"Generated username: {username}, password: {password}\")\n    \n        self.pb.add_customer_details(\n            first_name=\"John\",\n            last_name=\"Doe\",\n            address=\"123 Elm St\",\n            city=\"Springfield\",\n            state=\"IL\",\n            zip_code=\"62701\",\n            phone=\"555-1234\",\n            ssn=\"123-45-6789\",\n            username=username,\n            password=password\n        )\n        self.pb.click_register_button()\n        sleep(5)\n>       self.pb.verify_welcome_message_element()\n\ntestcases\\paraBank_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.paraBank_page.ParaBankPage object at 0x000001DAE0913620>\n\n    @allure.step(\"Verifying welcome message\")\n    def verify_welcome_message_element(self):\n        try:\n            self.wait_for_element(self.Locators.WELCOME_MESSAGE_ELEMENT, timeout=15)\n            element = self.get_element(self.Locators.WELCOME_MESSAGE_ELEMENT)\n            if element and element.is_displayed():\n                self.scroll_highlight_element(element)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Welcome Message\",\n                            attachment_type=AttachmentType.PNG)\n                assert element.text.strip() != \"\", \"Welcome message is empty\"\n            else:\n                raise Exception(\"Element found but not displayed\")\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failure Screenshot\",\n                        attachment_type=AttachmentType.PNG)\n            allure.attach(str(e), name=\"Exception\", attachment_type=AttachmentType.TEXT)\n>           assert False, f\"Welcome message verification failed: {e}\"\n                   ^^^^^\nE           AssertionError: Welcome message verification failed: Message: \nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x11d3b03+62899]\nE           \tGetHandleVerifier [0x0x11d3b44+62964]\nE           \t(No symbol) [0x0x10010f3]\nE           \t(No symbol) [0x0x104980e]\nE           \t(No symbol) [0x0x1049bab]\nE           \t(No symbol) [0x0x10925c2]\nE           \t(No symbol) [0x0x106e554]\nE           \t(No symbol) [0x0x108fd81]\nE           \t(No symbol) [0x0x106e306]\nE           \t(No symbol) [0x0x103d670]\nE           \t(No symbol) [0x0x103e4e4]\nE           \tGetHandleVerifier [0x0x1434793+2556483]\nE           \tGetHandleVerifier [0x0x142fd02+2537394]\nE           \tGetHandleVerifier [0x0x11fa2fa+220586]\nE           \tGetHandleVerifier [0x0x11eaae8+157080]\nE           \tGetHandleVerifier [0x0x11f141d+184013]\nE           \tGetHandleVerifier [0x0x11dba68+95512]\nE           \tGetHandleVerifier [0x0x11dbc10+95936]\nE           \tGetHandleVerifier [0x0x11c6b5a+9738]\nE           \tBaseThreadInitThunk [0x0x75a17ba9+25]\nE           \tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\nE           \tRtlClearBits [0x0x77d0c04f+191]\n\npages\\paraBank_page.py:102: AssertionError"}, "description": "This test case registers a new user with valid data and verifies the welcome message.", "steps": [{"name": "Clicking on Register link", "status": "passed", "start": 1751093518816, "stop": 1751093520624}, {"name": "Adding customer details: 'John' 'Doe'", "status": "passed", "parameters": [{"name": "first_name", "value": "'John'"}, {"name": "last_name", "value": "'Doe'"}, {"name": "address", "value": "'123 Elm St'"}, {"name": "city", "value": "'Springfield'"}, {"name": "state", "value": "'IL'"}, {"name": "zip_code", "value": "'62701'"}, {"name": "phone", "value": "'555-1234'"}, {"name": "ssn", "value": "'123-45-6789'"}, {"name": "username", "value": "'user_1427'"}, {"name": "password", "value": "'pass_8576'"}], "start": 1751093520625, "stop": 1751093522584}, {"name": "Clicking on Register button and verifying welcome message", "status": "passed", "start": 1751093522584, "stop": 1751093524890}, {"name": "Verifying welcome message", "status": "failed", "statusDetails": {"message": "AssertionError: Welcome message verification failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x11d3b03+62899]\n\tGetHandleVerifier [0x0x11d3b44+62964]\n\t(No symbol) [0x0x10010f3]\n\t(No symbol) [0x0x104980e]\n\t(No symbol) [0x0x1049bab]\n\t(No symbol) [0x0x10925c2]\n\t(No symbol) [0x0x106e554]\n\t(No symbol) [0x0x108fd81]\n\t(No symbol) [0x0x106e306]\n\t(No symbol) [0x0x103d670]\n\t(No symbol) [0x0x103e4e4]\n\tGetHandleVerifier [0x0x1434793+2556483]\n\tGetHandleVerifier [0x0x142fd02+2537394]\n\tGetHandleVerifier [0x0x11fa2fa+220586]\n\tGetHandleVerifier [0x0x11eaae8+157080]\n\tGetHandleVerifier [0x0x11f141d+184013]\n\tGetHandleVerifier [0x0x11dba68+95512]\n\tGetHandleVerifier [0x0x11dbc10+95936]\n\tGetHandleVerifier [0x0x11c6b5a+9738]\n\tBaseThreadInitThunk [0x0x75a17ba9+25]\n\tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\n\tRtlClearBits [0x0x77d0c04f+191]\n\n", "trace": "  File \"C:\\vsCode\\parabank_credentials\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\vsCode\\parabank_credentials\\pages\\paraBank_page.py\", line 102, in verify_welcome_message_element\n    assert False, f\"Welcome message verification failed: {e}\"\n           ^^^^^\n"}, "attachments": [{"name": "Failure Screenshot", "source": "ebb5c937-8211-496f-8035-f9a362498dc4-attachment.png", "type": "image/png"}, {"name": "Exception", "source": "0910c093-2120-47ad-bade-b8a8d00233b9-attachment.txt", "type": "text/plain"}], "start": 1751093529891, "stop": 1751093560690}], "attachments": [{"name": "screenshot", "source": "3b9bf6ff-3075-4df1-8215-f515c18bf623-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "a7869c0b-1444-492d-8151-113b34dc6b99-attachment.txt", "type": "text/plain"}], "start": 1751093518816, "stop": 1751093560695, "uuid": "77419496-ce10-4c94-b798-d88305718433", "historyId": "526650baf056a089a556142ed879dfac", "testCaseId": "526650baf056a089a556142ed879dfac", "fullName": "testcases.paraBank_test.TestParaBank#test_register_user", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "paraBank_test"}, {"name": "subSuite", "value": "TestParaBank"}, {"name": "host", "value": "Hans"}, {"name": "thread", "value": "14536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.paraBank_test"}]}