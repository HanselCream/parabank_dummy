{"name": "Test Registration with Valid Data", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xe43b03+62899]\n\tGetHandleVerifier [0x0xe43b44+62964]\n\t(No symbol) [0x0xc710f3]\n\t(No symbol) [0x0xcb980e]\n\t(No symbol) [0x0xcb9bab]\n\t(No symbol) [0x0xd025c2]\n\t(No symbol) [0x0xcde554]\n\t(No symbol) [0x0xcffd81]\n\t(No symbol) [0x0xcde306]\n\t(No symbol) [0x0xcad670]\n\t(No symbol) [0x0xcae4e4]\n\tGetHandleVerifier [0x0x10a4793+2556483]\n\tGetHandleVerifier [0x0x109fd02+2537394]\n\tGetHandleVerifier [0x0xe6a2fa+220586]\n\tGetHandleVerifier [0x0xe5aae8+157080]\n\tGetHandleVerifier [0x0xe6141d+184013]\n\tGetHandleVerifier [0x0xe4ba68+95512]\n\tGetHandleVerifier [0x0xe4bc10+95936]\n\tGetHandleVerifier [0x0xe36b5a+9738]\n\tBaseThreadInitThunk [0x0x75a17ba9+25]\n\tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\n\tRtlClearBits [0x0x77d0c04f+191]", "trace": "self = <paraBank_test.TestParaBank object at 0x000002666376ED50>\n\n    @allure.title(\"Test Registration with Valid Data\")\n    @allure.description(\"This test case registers a new user with valid data and verifies the welcome message.\")\n    def test_register_user(self):\n        self.pb.click_register()\n    \n        username = generate_random_name(prefix=\"user\")\n        password = generate_random_name(prefix=\"pass\")\n        print(f\"Generated username: {username}, password: {password}\")\n    \n        self.pb.add_customer_details(\n            first_name=\"John\",\n            last_name=\"Doe\",\n            address=\"123 Elm St\",\n            city=\"Springfield\",\n            state=\"IL\",\n            zip_code=\"62701\",\n            phone=\"555-1234\",\n            ssn=\"123-45-6789\",\n            username=username,\n            password=password\n        )\n        self.pb.click_register_button()\n        sleep(5)\n>       self.pb.verify_welcome_message_element()\n\ntestcases\\paraBank_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\paraBank_page.py:88: in verify_welcome_message_element\n    self.wait_for_element(self.Locators.WELCOME_MESSAGE_ELEMENT)\nbase\\BaseDriver.py:52: in wait_for_element\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f0a6cba96eabdae772fd80a24879aee1\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000026663817D80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xe43b03+62899]\nE       \tGetHandleVerifier [0x0xe43b44+62964]\nE       \t(No symbol) [0x0xc710f3]\nE       \t(No symbol) [0x0xcb980e]\nE       \t(No symbol) [0x0xcb9bab]\nE       \t(No symbol) [0x0xd025c2]\nE       \t(No symbol) [0x0xcde554]\nE       \t(No symbol) [0x0xcffd81]\nE       \t(No symbol) [0x0xcde306]\nE       \t(No symbol) [0x0xcad670]\nE       \t(No symbol) [0x0xcae4e4]\nE       \tGetHandleVerifier [0x0x10a4793+2556483]\nE       \tGetHandleVerifier [0x0x109fd02+2537394]\nE       \tGetHandleVerifier [0x0xe6a2fa+220586]\nE       \tGetHandleVerifier [0x0xe5aae8+157080]\nE       \tGetHandleVerifier [0x0xe6141d+184013]\nE       \tGetHandleVerifier [0x0xe4ba68+95512]\nE       \tGetHandleVerifier [0x0xe4bc10+95936]\nE       \tGetHandleVerifier [0x0xe36b5a+9738]\nE       \tBaseThreadInitThunk [0x0x75a17ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\nE       \tRtlClearBits [0x0x77d0c04f+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "This test case registers a new user with valid data and verifies the welcome message.", "steps": [{"name": "Clicking on Register link", "status": "passed", "start": 1751092106462, "stop": 1751092108557}, {"name": "Adding customer details: 'John' 'Doe'", "status": "passed", "parameters": [{"name": "first_name", "value": "'John'"}, {"name": "last_name", "value": "'Doe'"}, {"name": "address", "value": "'123 Elm St'"}, {"name": "city", "value": "'Springfield'"}, {"name": "state", "value": "'IL'"}, {"name": "zip_code", "value": "'62701'"}, {"name": "phone", "value": "'555-1234'"}, {"name": "ssn", "value": "'123-45-6789'"}, {"name": "username", "value": "'user_6702'"}, {"name": "password", "value": "'pass_1780'"}], "start": 1751092108557, "stop": 1751092110369}, {"name": "Clicking on Register button and verifying welcome message", "status": "passed", "start": 1751092110369, "stop": 1751092113578}, {"name": "Verifying welcome message", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xe43b03+62899]\n\tGetHandleVerifier [0x0xe43b44+62964]\n\t(No symbol) [0x0xc710f3]\n\t(No symbol) [0x0xcb980e]\n\t(No symbol) [0x0xcb9bab]\n\t(No symbol) [0x0xd025c2]\n\t(No symbol) [0x0xcde554]\n\t(No symbol) [0x0xcffd81]\n\t(No symbol) [0x0xcde306]\n\t(No symbol) [0x0xcad670]\n\t(No symbol) [0x0xcae4e4]\n\tGetHandleVerifier [0x0x10a4793+2556483]\n\tGetHandleVerifier [0x0x109fd02+2537394]\n\tGetHandleVerifier [0x0xe6a2fa+220586]\n\tGetHandleVerifier [0x0xe5aae8+157080]\n\tGetHandleVerifier [0x0xe6141d+184013]\n\tGetHandleVerifier [0x0xe4ba68+95512]\n\tGetHandleVerifier [0x0xe4bc10+95936]\n\tGetHandleVerifier [0x0xe36b5a+9738]\n\tBaseThreadInitThunk [0x0x75a17ba9+25]\n\tRtlInitializeExceptionChain [0x0x77d0c0cb+107]\n\tRtlClearBits [0x0x77d0c04f+191]\n\n", "trace": "  File \"C:\\vsCode\\parabank_credentials\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\vsCode\\parabank_credentials\\pages\\paraBank_page.py\", line 88, in verify_welcome_message_element\n    self.wait_for_element(self.Locators.WELCOME_MESSAGE_ELEMENT)\n    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\vsCode\\parabank_credentials\\base\\BaseDriver.py\", line 52, in wait_for_element\n        WebDriverWait(self.driver, timeout).until(\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        EC.visibility_of_element_located(locator)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\vsCode\\parabank_credentials\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1751092118580, "stop": 1751092129518}], "attachments": [{"name": "screenshot", "source": "c62f6134-33c3-499b-a23b-5d9110461dc7-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "82da63a0-b111-42fe-866d-0f1c37c88014-attachment.txt", "type": "text/plain"}], "start": 1751092106462, "stop": 1751092129522, "uuid": "5dce0cec-1d6a-47ae-b520-08825cf9fe92", "historyId": "526650baf056a089a556142ed879dfac", "testCaseId": "526650baf056a089a556142ed879dfac", "fullName": "testcases.paraBank_test.TestParaBank#test_register_user", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "paraBank_test"}, {"name": "subSuite", "value": "TestParaBank"}, {"name": "host", "value": "Hans"}, {"name": "thread", "value": "16472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.paraBank_test"}]}