{"name": "Test Registration with Invalid Data", "status": "failed", "statusDetails": {"message": "AssertionError: Register page did not load: Timeout waiting for element: ('xpath', \"//input[@value='Register']\")", "trace": "self = <pages.paraBank_page.ParaBankPage object at 0x000001D01BBA1310>, locator = ('xpath', \"//input[@value='Register']\"), timeout = 15\n\n    def wait_for_element(self, locator, timeout=10):\n        try:\n>           WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n\nbase\\BaseDriver.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bfc8cf88587152c4d98bbdc10bc3b29e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001D01BBAA2A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x11f3b03+62899]\nE       \tGetHandleVerifier [0x0x11f3b44+62964]\nE       \t(No symbol) [0x0x10210f3]\nE       \t(No symbol) [0x0x106980e]\nE       \t(No symbol) [0x0x1069bab]\nE       \t(No symbol) [0x0x10b25c2]\nE       \t(No symbol) [0x0x108e554]\nE       \t(No symbol) [0x0x10afd81]\nE       \t(No symbol) [0x0x108e306]\nE       \t(No symbol) [0x0x105d670]\nE       \t(No symbol) [0x0x105e4e4]\nE       \tGetHandleVerifier [0x0x1454793+2556483]\nE       \tGetHandleVerifier [0x0x144fd02+2537394]\nE       \tGetHandleVerifier [0x0x121a2fa+220586]\nE       \tGetHandleVerifier [0x0x120aae8+157080]\nE       \tGetHandleVerifier [0x0x121141d+184013]\nE       \tGetHandleVerifier [0x0x11fba68+95512]\nE       \tGetHandleVerifier [0x0x11fbc10+95936]\nE       \tGetHandleVerifier [0x0x11e6b5a+9738]\nE       \tBaseThreadInitThunk [0x0x771e7ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x77ccc0cb+107]\nE       \tRtlClearBits [0x0x77ccc04f+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nThe above exception was the direct cause of the following exception:\n\nself = <pages.paraBank_page.ParaBankPage object at 0x000001D01BBA1310>\n\n    @allure.step(\"Clicking on Register link\")\n    def click_register(self):\n        self.click_on_element(self.Locators.REGISTER)\n        try:\n>           self.wait_for_element(self.Locators.REGISTER_BUTTON, timeout=15)\n\npages\\paraBank_page.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.paraBank_page.ParaBankPage object at 0x000001D01BBA1310>, locator = ('xpath', \"//input[@value='Register']\"), timeout = 15\n\n    def wait_for_element(self, locator, timeout=10):\n        try:\n            WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n        except TimeoutException as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Wait Element Timeout\", attachment_type=AttachmentType.PNG)\n>           raise Exception(f\"Timeout waiting for element: {locator}\") from e\nE           Exception: Timeout waiting for element: ('xpath', \"//input[@value='Register']\")\n\nbase\\BaseDriver.py:65: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nself = <paraBank_test.TestParaBank object at 0x000001D01BBA0E10>\n\n    @pytest.mark.register\n    @allure.title(\"Test Registration with Invalid Data\")\n    def test_register_user_with_invalid_data(self):\n>       self.pb.click_register()\n\ntestcases\\paraBank_test.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.paraBank_page.ParaBankPage object at 0x000001D01BBA1310>\n\n    @allure.step(\"Clicking on Register link\")\n    def click_register(self):\n        self.click_on_element(self.Locators.REGISTER)\n        try:\n            self.wait_for_element(self.Locators.REGISTER_BUTTON, timeout=15)\n            assert self.is_element_visible(self.Locators.REGISTER_BUTTON), \"Register form not visible\"\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Register Page Load Failure\", attachment_type=AttachmentType.PNG)\n            allure.attach(str(e), name=\"Timeout Exception\", attachment_type=AttachmentType.TEXT)\n>           assert False, f\"Register page did not load: {e}\"\n                   ^^^^^\nE           AssertionError: Register page did not load: Timeout waiting for element: ('xpath', \"//input[@value='Register']\")\n\npages\\paraBank_page.py:71: AssertionError"}, "steps": [{"name": "Clicking on Register link", "status": "failed", "statusDetails": {"message": "AssertionError: Register page did not load: Timeout waiting for element: ('xpath', \"//input[@value='Register']\")\n", "trace": "  File \"C:\\vsCode\\parabank_credentials\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\vsCode\\parabank_credentials\\pages\\paraBank_page.py\", line 71, in click_register\n    assert False, f\"Register page did not load: {e}\"\n           ^^^^^\n"}, "attachments": [{"name": "Wait Element Timeout", "source": "0dbd58f3-e434-46c5-b987-dd1c40b0cbc5-attachment.png", "type": "image/png"}, {"name": "Register Page Load Failure", "source": "c772ba8e-baa8-4b40-98fa-a06babeb51e4-attachment.png", "type": "image/png"}, {"name": "Timeout Exception", "source": "b80f5aaf-a615-4f21-8314-6522fae04159-attachment.txt", "type": "text/plain"}], "start": 1751152340965, "stop": 1751152372015}], "attachments": [{"name": "screenshot", "source": "106bc96c-85a6-485e-b4b8-cd278674bf3f-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "c97f0ffa-e723-463b-a2c9-83efded44404-attachment.txt", "type": "text/plain"}], "start": 1751152340965, "stop": 1751152372045, "uuid": "93556e7c-05ef-4683-928b-835d62f12f39", "historyId": "c72fc3edbefed83b6e3076b54585fcc5", "testCaseId": "c72fc3edbefed83b6e3076b54585fcc5", "fullName": "testcases.paraBank_test.TestParaBank#test_register_user_with_invalid_data", "labels": [{"name": "tag", "value": "register"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "paraBank_test"}, {"name": "subSuite", "value": "TestParaBank"}, {"name": "host", "value": "Hans"}, {"name": "thread", "value": "4320-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.paraBank_test"}]}